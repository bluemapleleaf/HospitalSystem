<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.web.dao.SalaryMapper">
  <resultMap id="BaseResultMap" type="com.web.entity.Salary">
    <id column="salaryId" jdbcType="INTEGER" property="salaryid" />
    <result column="salary" jdbcType="INTEGER" property="salary" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="isDelete" jdbcType="INTEGER" property="isdelete" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    salaryId, salary, uid, isDelete
  </sql>
  <select id="selectByExample" parameterType="com.web.entity.SalaryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from salary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from salary
    where salaryId = #{salaryid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from salary
    where salaryId = #{salaryid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.web.entity.SalaryExample">
    delete from salary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.web.entity.Salary">
    insert into salary (salaryId, salary, uid, 
      isDelete)
    values (#{salaryid,jdbcType=INTEGER}, #{salary,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, 
      #{isdelete,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.web.entity.Salary">
    insert into salary
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="salaryid != null">
        salaryId,
      </if>
      <if test="salary != null">
        salary,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="isdelete != null">
        isDelete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="salaryid != null">
        #{salaryid,jdbcType=INTEGER},
      </if>
      <if test="salary != null">
        #{salary,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="isdelete != null">
        #{isdelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.web.entity.SalaryExample" resultType="java.lang.Long">
    select count(*) from salary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update salary
    <set>
      <if test="record.salaryid != null">
        salaryId = #{record.salaryid,jdbcType=INTEGER},
      </if>
      <if test="record.salary != null">
        salary = #{record.salary,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.isdelete != null">
        isDelete = #{record.isdelete,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update salary
    set salaryId = #{record.salaryid,jdbcType=INTEGER},
      salary = #{record.salary,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      isDelete = #{record.isdelete,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.web.entity.Salary">
    update salary
    <set>
      <if test="salary != null">
        salary = #{salary,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="isdelete != null">
        isDelete = #{isdelete,jdbcType=INTEGER},
      </if>
    </set>
    where salaryId = #{salaryid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.web.entity.Salary">
    update salary
    set salary = #{salary,jdbcType=INTEGER},
      uid = #{uid,jdbcType=INTEGER},
      isDelete = #{isdelete,jdbcType=INTEGER}
    where salaryId = #{salaryid,jdbcType=INTEGER}
  </update>
  
  <resultMap type="com.web.entity.Salary"  id="mySalaryResult">
  	<id column="salaryId" jdbcType="INTEGER" property="salaryid" />
    <result column="salary" jdbcType="INTEGER" property="salary" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="isDelete" jdbcType="INTEGER" property="isdelete" />
  	<association property="user" javaType="com.web.entity.User">
 		<id column="userId" jdbcType="INTEGER" property="userid" />
   		<result column="userName" jdbcType="VARCHAR" property="username" />
  	</association>
  </resultMap>
  
  <!-- 查询所有(User+salary) -->
  <select id="queryAllInfo" resultMap="mySalaryResult">
  	SELECT * FROM salary s,`user` u
	WHERE s.uid = u.userId
  </select>
</mapper>