<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.web.dao.AttendanceRecordMapper">
  <resultMap id="BaseResultMap" type="com.web.entity.AttendanceRecord">
    <id column="attdId" jdbcType="INTEGER" property="attdid" />
    <result column="workerName" jdbcType="VARCHAR" property="workername" />
    <result column="workingConditions" jdbcType="VARCHAR" property="workingconditions" />
    <result column="closingConditionns" jdbcType="VARCHAR" property="closingconditionns" />
    <result column="isdelete" jdbcType="INTEGER" property="isdelete" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    attdId, workerName, workingConditions, closingConditionns, isdelete
  </sql>
  <select id="selectByExample" parameterType="com.web.entity.AttendanceRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from attendance_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from attendance_record
    where attdId = #{attdid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from attendance_record
    where attdId = #{attdid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.web.entity.AttendanceRecordExample">
    delete from attendance_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.web.entity.AttendanceRecord">
    insert into attendance_record (attdId, workerName, workingConditions, 
      closingConditionns, isdelete)
    values (#{attdid,jdbcType=INTEGER}, #{workername,jdbcType=VARCHAR}, #{workingconditions,jdbcType=VARCHAR}, 
      #{closingconditionns,jdbcType=VARCHAR}, #{isdelete,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.web.entity.AttendanceRecord">
    insert into attendance_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="attdid != null">
        attdId,
      </if>
      <if test="workername != null">
        workerName,
      </if>
      <if test="workingconditions != null">
        workingConditions,
      </if>
      <if test="closingconditionns != null">
        closingConditionns,
      </if>
      <if test="isdelete != null">
        isdelete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="attdid != null">
        #{attdid,jdbcType=INTEGER},
      </if>
      <if test="workername != null">
        #{workername,jdbcType=VARCHAR},
      </if>
      <if test="workingconditions != null">
        #{workingconditions,jdbcType=VARCHAR},
      </if>
      <if test="closingconditionns != null">
        #{closingconditionns,jdbcType=VARCHAR},
      </if>
      <if test="isdelete != null">
        #{isdelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.web.entity.AttendanceRecordExample" resultType="java.lang.Long">
    select count(*) from attendance_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update attendance_record
    <set>
      <if test="record.attdid != null">
        attdId = #{record.attdid,jdbcType=INTEGER},
      </if>
      <if test="record.workername != null">
        workerName = #{record.workername,jdbcType=VARCHAR},
      </if>
      <if test="record.workingconditions != null">
        workingConditions = #{record.workingconditions,jdbcType=VARCHAR},
      </if>
      <if test="record.closingconditionns != null">
        closingConditionns = #{record.closingconditionns,jdbcType=VARCHAR},
      </if>
      <if test="record.isdelete != null">
        isdelete = #{record.isdelete,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update attendance_record
    set attdId = #{record.attdid,jdbcType=INTEGER},
      workerName = #{record.workername,jdbcType=VARCHAR},
      workingConditions = #{record.workingconditions,jdbcType=VARCHAR},
      closingConditionns = #{record.closingconditionns,jdbcType=VARCHAR},
      isdelete = #{record.isdelete,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.web.entity.AttendanceRecord">
    update attendance_record
    <set>
      <if test="workername != null">
        workerName = #{workername,jdbcType=VARCHAR},
      </if>
      <if test="workingconditions != null">
        workingConditions = #{workingconditions,jdbcType=VARCHAR},
      </if>
      <if test="closingconditionns != null">
        closingConditionns = #{closingconditionns,jdbcType=VARCHAR},
      </if>
      <if test="isdelete != null">
        isdelete = #{isdelete,jdbcType=INTEGER},
      </if>
    </set>
    where attdId = #{attdid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.web.entity.AttendanceRecord">
    update attendance_record
    set workerName = #{workername,jdbcType=VARCHAR},
      workingConditions = #{workingconditions,jdbcType=VARCHAR},
      closingConditionns = #{closingconditionns,jdbcType=VARCHAR},
      isdelete = #{isdelete,jdbcType=INTEGER}
    where attdId = #{attdid,jdbcType=INTEGER}
  </update>
</mapper>