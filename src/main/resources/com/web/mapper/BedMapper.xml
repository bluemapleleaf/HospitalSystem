<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.web.dao.BedMapper">
  <resultMap id="BaseResultMap" type="com.web.entity.Bed">
    <id column="bedNumber" jdbcType="INTEGER" property="bednumber" />
    <result column="icuId" jdbcType="INTEGER" property="icuid" />
    <result column="competentPhysician" jdbcType="INTEGER" property="competentphysician" />
    <result column="watchKeeperId" jdbcType="INTEGER" property="watchkeeperid" />
    <result column="therapeuticOutcome" jdbcType="VARCHAR" property="therapeuticoutcome" />
    <result column="bedEmptyOrNot" jdbcType="INTEGER" property="bedemptyornot" />
    <result column="bedRent" jdbcType="INTEGER" property="bedrent" />
    <result column="isDelete" jdbcType="INTEGER" property="isdelete" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    bedNumber, icuId, competentPhysician, watchKeeperId, therapeuticOutcome, bedEmptyOrNot, 
    bedRent, isDelete
  </sql>
  <select id="selectByExample" parameterType="com.web.entity.BedExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bed
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bed
    where bedNumber = #{bednumber,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bed
    where bedNumber = #{bednumber,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.web.entity.BedExample">
    delete from bed
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.web.entity.Bed">
    insert into bed (bedNumber, icuId, competentPhysician, 
      watchKeeperId, therapeuticOutcome, bedEmptyOrNot, 
      bedRent, isDelete)
    values (#{bednumber,jdbcType=INTEGER}, #{icuid,jdbcType=INTEGER}, #{competentphysician,jdbcType=INTEGER}, 
      #{watchkeeperid,jdbcType=INTEGER}, #{therapeuticoutcome,jdbcType=VARCHAR}, #{bedemptyornot,jdbcType=INTEGER}, 
      #{bedrent,jdbcType=INTEGER}, #{isdelete,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.web.entity.Bed">
    insert into bed
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bednumber != null">
        bedNumber,
      </if>
      <if test="icuid != null">
        icuId,
      </if>
      <if test="competentphysician != null">
        competentPhysician,
      </if>
      <if test="watchkeeperid != null">
        watchKeeperId,
      </if>
      <if test="therapeuticoutcome != null">
        therapeuticOutcome,
      </if>
      <if test="bedemptyornot != null">
        bedEmptyOrNot,
      </if>
      <if test="bedrent != null">
        bedRent,
      </if>
      <if test="isdelete != null">
        isDelete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bednumber != null">
        #{bednumber,jdbcType=INTEGER},
      </if>
      <if test="icuid != null">
        #{icuid,jdbcType=INTEGER},
      </if>
      <if test="competentphysician != null">
        #{competentphysician,jdbcType=INTEGER},
      </if>
      <if test="watchkeeperid != null">
        #{watchkeeperid,jdbcType=INTEGER},
      </if>
      <if test="therapeuticoutcome != null">
        #{therapeuticoutcome,jdbcType=VARCHAR},
      </if>
      <if test="bedemptyornot != null">
        #{bedemptyornot,jdbcType=INTEGER},
      </if>
      <if test="bedrent != null">
        #{bedrent,jdbcType=INTEGER},
      </if>
      <if test="isdelete != null">
        #{isdelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.web.entity.BedExample" resultType="java.lang.Long">
    select count(*) from bed
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bed
    <set>
      <if test="record.bednumber != null">
        bedNumber = #{record.bednumber,jdbcType=INTEGER},
      </if>
      <if test="record.icuid != null">
        icuId = #{record.icuid,jdbcType=INTEGER},
      </if>
      <if test="record.competentphysician != null">
        competentPhysician = #{record.competentphysician,jdbcType=INTEGER},
      </if>
      <if test="record.watchkeeperid != null">
        watchKeeperId = #{record.watchkeeperid,jdbcType=INTEGER},
      </if>
      <if test="record.therapeuticoutcome != null">
        therapeuticOutcome = #{record.therapeuticoutcome,jdbcType=VARCHAR},
      </if>
      <if test="record.bedemptyornot != null">
        bedEmptyOrNot = #{record.bedemptyornot,jdbcType=INTEGER},
      </if>
      <if test="record.bedrent != null">
        bedRent = #{record.bedrent,jdbcType=INTEGER},
      </if>
      <if test="record.isdelete != null">
        isDelete = #{record.isdelete,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bed
    set bedNumber = #{record.bednumber,jdbcType=INTEGER},
      icuId = #{record.icuid,jdbcType=INTEGER},
      competentPhysician = #{record.competentphysician,jdbcType=INTEGER},
      watchKeeperId = #{record.watchkeeperid,jdbcType=INTEGER},
      therapeuticOutcome = #{record.therapeuticoutcome,jdbcType=VARCHAR},
      bedEmptyOrNot = #{record.bedemptyornot,jdbcType=INTEGER},
      bedRent = #{record.bedrent,jdbcType=INTEGER},
      isDelete = #{record.isdelete,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.web.entity.Bed">
    update bed
    <set>
      <if test="icuid != null">
        icuId = #{icuid,jdbcType=INTEGER},
      </if>
      <if test="competentphysician != null">
        competentPhysician = #{competentphysician,jdbcType=INTEGER},
      </if>
      <if test="watchkeeperid != null">
        watchKeeperId = #{watchkeeperid,jdbcType=INTEGER},
      </if>
      <if test="therapeuticoutcome != null">
        therapeuticOutcome = #{therapeuticoutcome,jdbcType=VARCHAR},
      </if>
      <if test="bedemptyornot != null">
        bedEmptyOrNot = #{bedemptyornot,jdbcType=INTEGER},
      </if>
      <if test="bedrent != null">
        bedRent = #{bedrent,jdbcType=INTEGER},
      </if>
      <if test="isdelete != null">
        isDelete = #{isdelete,jdbcType=INTEGER},
      </if>
    </set>
    where bedNumber = #{bednumber,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.web.entity.Bed">
    update bed
    set icuId = #{icuid,jdbcType=INTEGER},
      competentPhysician = #{competentphysician,jdbcType=INTEGER},
      watchKeeperId = #{watchkeeperid,jdbcType=INTEGER},
      therapeuticOutcome = #{therapeuticoutcome,jdbcType=VARCHAR},
      bedEmptyOrNot = #{bedemptyornot,jdbcType=INTEGER},
      bedRent = #{bedrent,jdbcType=INTEGER},
      isDelete = #{isdelete,jdbcType=INTEGER}
    where bedNumber = #{bednumber,jdbcType=INTEGER}
  </update>
  
  <!-- 自定义结果集 -->
  <resultMap id="resultBed" type="com.web.entity.Bed">
    <id column="bedNumber" jdbcType="INTEGER" property="bednumber" />
    <result column="icuId" jdbcType="INTEGER" property="icuid" />
    <result column="competentPhysician" jdbcType="INTEGER" property="competentphysician" />
    <result column="watchKeeperId" jdbcType="INTEGER" property="watchkeeperid" />
    <result column="therapeuticOutcome" jdbcType="VARCHAR" property="therapeuticoutcome" />
    <result column="bedEmptyOrNot" jdbcType="INTEGER" property="bedemptyornot" />
    <result column="bedRent" jdbcType="INTEGER" property="bedrent" />
    <result column="isDelete" jdbcType="INTEGER" property="isdelete" />
    
    <!-- 多对一 -->
    <association property="user" javaType="com.web.entity.User">
	   <id column="userId1" jdbcType="INTEGER" property="userid" />
	   <result column="userName" jdbcType="VARCHAR" property="username" />
	   <result column="userPwd" jdbcType="VARCHAR" property="userpwd" />
	   <result column="userSex" jdbcType="VARCHAR" property="usersex" />
	   <result column="userPhoto" jdbcType="VARCHAR" property="userphoto" />
	   <result column="userCard" jdbcType="VARCHAR" property="usercard" />
	   <result column="birthday" jdbcType="VARCHAR" property="birthday" />
	   <result column="postId" jdbcType="INTEGER" property="postid" />
	   <result column="state" jdbcType="INTEGER" property="state" />
	   <result column="icuId" jdbcType="INTEGER" property="icuid" />
	   <result column="descc" jdbcType="VARCHAR" property="descc" /> 		      
    </association>
    
    <!-- <association property="user" javaType="com.web.entity.User">
	   <id column="userId2" jdbcType="INTEGER" property="userid" />
	   <result column="userName" jdbcType="VARCHAR" property="username" />
	   <result column="userPwd" jdbcType="VARCHAR" property="userpwd" />
	   <result column="userSex" jdbcType="VARCHAR" property="usersex" />
	   <result column="userPhoto" jdbcType="VARCHAR" property="userphoto" />
	   <result column="userCard" jdbcType="VARCHAR" property="usercard" />
	   <result column="birthday" jdbcType="VARCHAR" property="birthday" />
	   <result column="postId" jdbcType="INTEGER" property="postid" />
	   <result column="state" jdbcType="INTEGER" property="state" />
	   <result column="icuId" jdbcType="INTEGER" property="icuid" />
	   <result column="descc" jdbcType="VARCHAR" property="descc" /> 		      
    </association> -->
    <association property="icu" javaType="com.web.entity.Icu">
      <id column="icuId" jdbcType="INTEGER" property="icuid" />
      <result column="bedNo1" jdbcType="INTEGER" property="bedno" />
     <!--  <result column="userId" jdbcType="INTEGER" property="userid" /> -->
      <result column="icuName" jdbcType="VARCHAR" property="icuname" />
      <result column="chargePerson" jdbcType="VARCHAR" property="chargeperson" />
      <result column="occupantsNo" jdbcType="INTEGER" property="occupantsno" />
      <result column="dischargesNo" jdbcType="INTEGER" property="dischargesno" />
      <result column="treatmentRate" jdbcType="DOUBLE" property="treatmentrate" />
      <result column="improvementRate" jdbcType="DOUBLE" property="improvementrate" />
      <result column="unhealedRate" jdbcType="DOUBLE" property="unhealedrate" />
      <result column="mortality" jdbcType="DOUBLE" property="mortality" />
      <result column="diagnosticCoincidence" jdbcType="VARCHAR" property="diagnosticcoincidence" />
      <result column="bedUtilizationRate" jdbcType="DOUBLE" property="bedutilizationrate" />
      <result column="isDelete" jdbcType="INTEGER" property="isdelete" />
    </association>
  </resultMap>
  
  <select id="queryBedUserIcu" parameterType="com.web.entity.Bed" 
     resultMap="resultBed">
     select  b.*,u.*,i.*
     from bed b,user u,icu i
     WHERE (b.competentPhysician = u.userId or b.watchKeeperId = u.userId)
     and b.icuId = i.icuId
     
  </select>
  
  
</mapper>