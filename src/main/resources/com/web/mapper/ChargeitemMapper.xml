<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.web.dao.ChargeitemMapper">
  <resultMap id="BaseResultMap" type="com.web.entity.Chargeitem">
    <id column="chargeId" jdbcType="INTEGER" property="chargeid" />
    <result column="patientId" jdbcType="INTEGER" property="patientid" />
    <result column="medicineFree" jdbcType="INTEGER" property="medicinefree" />
    <result column="inspectionFree" jdbcType="DOUBLE" property="inspectionfree" />
    <result column="checkFree" jdbcType="DOUBLE" property="checkfree" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    chargeId, patientId, medicineFree, inspectionFree, checkFree
  </sql>
  <select id="selectByExample" parameterType="com.web.entity.ChargeitemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from chargeitem
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from chargeitem
    where chargeId = #{chargeid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from chargeitem
    where chargeId = #{chargeid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.web.entity.ChargeitemExample">
    delete from chargeitem
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.web.entity.Chargeitem">
    insert into chargeitem (chargeId, patientId, medicineFree, 
      inspectionFree, checkFree)
    values (#{chargeid,jdbcType=INTEGER}, #{patientid,jdbcType=INTEGER}, #{medicinefree,jdbcType=INTEGER}, 
      #{inspectionfree,jdbcType=DOUBLE}, #{checkfree,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.web.entity.Chargeitem">
    insert into chargeitem
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="chargeid != null">
        chargeId,
      </if>
      <if test="patientid != null">
        patientId,
      </if>
      <if test="medicinefree != null">
        medicineFree,
      </if>
      <if test="inspectionfree != null">
        inspectionFree,
      </if>
      <if test="checkfree != null">
        checkFree,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="chargeid != null">
        #{chargeid,jdbcType=INTEGER},
      </if>
      <if test="patientid != null">
        #{patientid,jdbcType=INTEGER},
      </if>
      <if test="medicinefree != null">
        #{medicinefree,jdbcType=INTEGER},
      </if>
      <if test="inspectionfree != null">
        #{inspectionfree,jdbcType=DOUBLE},
      </if>
      <if test="checkfree != null">
        #{checkfree,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.web.entity.ChargeitemExample" resultType="java.lang.Long">
    select count(*) from chargeitem
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update chargeitem
    <set>
      <if test="record.chargeid != null">
        chargeId = #{record.chargeid,jdbcType=INTEGER},
      </if>
      <if test="record.patientid != null">
        patientId = #{record.patientid,jdbcType=INTEGER},
      </if>
      <if test="record.medicinefree != null">
        medicineFree = #{record.medicinefree,jdbcType=INTEGER},
      </if>
      <if test="record.inspectionfree != null">
        inspectionFree = #{record.inspectionfree,jdbcType=DOUBLE},
      </if>
      <if test="record.checkfree != null">
        checkFree = #{record.checkfree,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update chargeitem
    set chargeId = #{record.chargeid,jdbcType=INTEGER},
      patientId = #{record.patientid,jdbcType=INTEGER},
      medicineFree = #{record.medicinefree,jdbcType=INTEGER},
      inspectionFree = #{record.inspectionfree,jdbcType=DOUBLE},
      checkFree = #{record.checkfree,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.web.entity.Chargeitem">
    update chargeitem
    <set>
      <if test="patientid != null">
        patientId = #{patientid,jdbcType=INTEGER},
      </if>
      <if test="medicinefree != null">
        medicineFree = #{medicinefree,jdbcType=INTEGER},
      </if>
      <if test="inspectionfree != null">
        inspectionFree = #{inspectionfree,jdbcType=DOUBLE},
      </if>
      <if test="checkfree != null">
        checkFree = #{checkfree,jdbcType=DOUBLE},
      </if>
    </set>
    where chargeId = #{chargeid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.web.entity.Chargeitem">
    update chargeitem
    set patientId = #{patientid,jdbcType=INTEGER},
      medicineFree = #{medicinefree,jdbcType=INTEGER},
      inspectionFree = #{inspectionfree,jdbcType=DOUBLE},
      checkFree = #{checkfree,jdbcType=DOUBLE}
    where chargeId = #{chargeid,jdbcType=INTEGER}
  </update>
  
  <resultMap id="chargeitemResultMap" type="com.web.entity.Chargeitem">
		<id column="chargeId" jdbcType="INTEGER" property="chargeid" />
		<result column="patientId" jdbcType="INTEGER" property="patientid" />
		<result column="medicineFree" jdbcType="INTEGER" property="medicinefree" />
		<result column="inspectionFree" jdbcType="DOUBLE" property="inspectionfree" />
		<result column="checkFree" jdbcType="DOUBLE" property="checkfree" />

		<association property="patient" javaType="com.web.entity.Patient">
			<id column="patientId" jdbcType="INTEGER" property="patientid" />
			<result column="name" jdbcType="VARCHAR" property="name" />
		</association>

	</resultMap>

	<select id="queryAll" resultMap="chargeitemResultMap">
		select c.*,p.`name`
		FROM
		chargeitem c, patient p
		WHERE c.patientId = p.patientId

	</select>
</mapper>