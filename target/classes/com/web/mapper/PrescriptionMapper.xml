<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.web.dao.PrescriptionMapper">
	<resultMap id="BaseResultMap"
		type="com.web.entity.Prescription">
		<id column="prescriptionNumber" jdbcType="INTEGER"
			property="prescriptionnumber" />
		<result column="drugsId" jdbcType="INTEGER" property="drugsid" />
		<result column="drugNo" jdbcType="INTEGER" property="drugno" />
		<result column="doctorAdviceId" jdbcType="INTEGER"
			property="doctoradviceid" />
		<result column="isDelete" jdbcType="INTEGER"
			property="isdelete" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		prescriptionNumber, drugsId, drugNo, doctorAdviceId,
		isDelete
	</sql>
	<select id="selectByExample"
		parameterType="com.web.entity.PrescriptionExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from prescription
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		<if test="limit != null">
			<if test="offset != null">
				limit ${offset}, ${limit}
			</if>
			<if test="offset == null">
				limit ${limit}
			</if>
		</if>
	</select>
	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from prescription
		where prescriptionNumber =
		#{prescriptionnumber,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from prescription
		where prescriptionNumber =
		#{prescriptionnumber,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample"
		parameterType="com.web.entity.PrescriptionExample">
		delete from prescription
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.web.entity.Prescription">
		insert into prescription
		(prescriptionNumber, drugsId, drugNo,
		doctorAdviceId, isDelete)
		values
		(#{prescriptionnumber,jdbcType=INTEGER}, #{drugsid,jdbcType=INTEGER},
		#{drugno,jdbcType=INTEGER},
		#{doctoradviceid,jdbcType=INTEGER},
		#{isdelete,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective"
		parameterType="com.web.entity.Prescription">
		insert into prescription
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="prescriptionnumber != null">
				prescriptionNumber,
			</if>
			<if test="drugsid != null">
				drugsId,
			</if>
			<if test="drugno != null">
				drugNo,
			</if>
			<if test="doctoradviceid != null">
				doctorAdviceId,
			</if>
			<if test="isdelete != null">
				isDelete,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="prescriptionnumber != null">
				#{prescriptionnumber,jdbcType=INTEGER},
			</if>
			<if test="drugsid != null">
				#{drugsid,jdbcType=INTEGER},
			</if>
			<if test="drugno != null">
				#{drugno,jdbcType=INTEGER},
			</if>
			<if test="doctoradviceid != null">
				#{doctoradviceid,jdbcType=INTEGER},
			</if>
			<if test="isdelete != null">
				#{isdelete,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="com.web.entity.PrescriptionExample"
		resultType="java.lang.Long">
		select count(*) from prescription
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update prescription
		<set>
			<if test="record.prescriptionnumber != null">
				prescriptionNumber =
				#{record.prescriptionnumber,jdbcType=INTEGER},
			</if>
			<if test="record.drugsid != null">
				drugsId = #{record.drugsid,jdbcType=INTEGER},
			</if>
			<if test="record.drugno != null">
				drugNo = #{record.drugno,jdbcType=INTEGER},
			</if>
			<if test="record.doctoradviceid != null">
				doctorAdviceId =
				#{record.doctoradviceid,jdbcType=INTEGER},
			</if>
			<if test="record.isdelete != null">
				isDelete = #{record.isdelete,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update prescription
		set prescriptionNumber =
		#{record.prescriptionnumber,jdbcType=INTEGER},
		drugsId =
		#{record.drugsid,jdbcType=INTEGER},
		drugNo =
		#{record.drugno,jdbcType=INTEGER},
		doctorAdviceId =
		#{record.doctoradviceid,jdbcType=INTEGER},
		isDelete =
		#{record.isdelete,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.web.entity.Prescription">
		update prescription
		<set>
			<if test="drugsid != null">
				drugsId = #{drugsid,jdbcType=INTEGER},
			</if>
			<if test="drugno != null">
				drugNo = #{drugno,jdbcType=INTEGER},
			</if>
			<if test="doctoradviceid != null">
				doctorAdviceId = #{doctoradviceid,jdbcType=INTEGER},
			</if>
			<if test="isdelete != null">
				isDelete = #{isdelete,jdbcType=INTEGER},
			</if>
		</set>
		where prescriptionNumber = #{prescriptionnumber,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.web.entity.Prescription">
		update prescription
		set drugsId =
		#{drugsid,jdbcType=INTEGER},
		drugNo = #{drugno,jdbcType=INTEGER},
		doctorAdviceId = #{doctoradviceid,jdbcType=INTEGER},
		isDelete =
		#{isdelete,jdbcType=INTEGER}
		where prescriptionNumber =
		#{prescriptionnumber,jdbcType=INTEGER}
	</update>

	<resultMap id="prescriptionResultMap"
		type="com.web.entity.Prescription">
		<id column="prescriptionNumber" jdbcType="INTEGER"
			property="prescriptionnumber" />
		<result column="drugsId" jdbcType="INTEGER" property="drugsid" />
		<result column="drugNo" jdbcType="INTEGER" property="drugno" />
		<result column="doctorAdviceId" jdbcType="INTEGER"
			property="doctoradviceid" />
		<result column="isDelete" jdbcType="INTEGER"
			property="isdelete" />


		<association property="drugs"
			javaType="com.web.entity.Drugs">
			<id column="drugsId" jdbcType="INTEGER" property="drugsid" />
			<result column="drugsName" jdbcType="VARCHAR"
				property="drugsname" />
		</association>

		<association property="doctoradvice"
			javaType="com.web.entity.Doctoradvice">
			<id column="doctorAdviceId" jdbcType="INTEGER"
				property="doctoradviceid" />
			<result column="doctorAdviceContent" jdbcType="VARCHAR"
				property="doctoradvicecontent" />

			<association property="patient"
				javaType="com.web.entity.Patient">
				<id column="patientId" jdbcType="INTEGER" property="patientid" />
				<result column="name" jdbcType="VARCHAR" property="name" />

			</association>
		</association>
	</resultMap>

	<select id="queryAll" resultMap="prescriptionResultMap">
		SELECT
		d.drugsName,a.doctorAdviceContent,t.`name`
		FROM prescription p,drugs
		d,doctoradvice a,patient t
		WHERE p.doctorAdviceId = a.doctorAdviceId
		AND p.drugsId= d.drugsId
		AND a.patientId= t.patientId
	</select>
</mapper>